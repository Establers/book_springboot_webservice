buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// 이 프로젝트의 플러그인 의존성 관리를 위한 설정
// ext : build.gradle 에서 사용하는 전역변수를 설정하는 곳
// springBootVersion 전역변수를 생성하고 그 값을 2.1.7.. 로 하겠다는 것
// spring-boot-gradle-plugin 라는
// 스프링부트 그레이들 플러그인의 2.1.7릴리즈를 의존성으로 받겠다는 것


plugins {
    id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// io.spring... 은 스프링부트 의존성들을 관리해주는 플러그인이여서 꼭 추가해야함

group 'com.hwan.book'
version '1.0-SNAPSHOT'


repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    // 특정버전을 명시하면 안된다. 버전을 명시하지 않아야 맨 위에서 작성한.. org.spring..{..}
    // 의 버전을 따라가게 됨

    // 롬복 추가
    compileOnly('org.projectlombok:lombok') // 추가후 새로고침
    //annotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    // 스프링 부트용 Spring Data JPA 추상화 라이브러리
    // 스프링부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리해줌
    implementation('com.h2database:h2')
    // 인메모리 관계형 DB
    // 별도의 설치 필요 없이 프로젝트 의존성만으로 관리할 수 있음
    // 메모리에서 실행되기 때문에 애플리케이션을 재시작할 때 마다 초기화된다는 점을 이용해
    // 테스트 용도로 많이 사용됨
    // 이 책에서는 JPA의 테스트, 로컬 환경에서의 구동에서 사용할 예정

    implementation('org.springframework.boot:spring-boot-starter-mustache')

    // 구글 로그인 관련 의존성 추가
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    // 소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현시 필요한 의존성
    // spring-security-oauth2-client 와 spring-security-oauth2-jose를 기본으로 관리해줌
}

test {
    useJUnitPlatform()
}